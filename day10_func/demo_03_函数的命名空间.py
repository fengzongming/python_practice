"""
    命名空间有三种
        内置命名空间
            python解释器一启动就可以使用的, 名字存储在内置命名空间中
        全局命名空间
            我们写的代码, 但不包括函数中的代码
            在程序从上到下执行的过程中, 依次加载进内存的
            放置了我们设置的所有变量名和函数名
        局部命名空间
            就是函数内部定义的名字
            当调用函数的时候, 才会产生这个名称空间,
            随着函数执行的结束而结束


    命名空间的使用:
        局部命名空间: 可以使用内置, 全局和本局部的名字
        全局命名空间: 可以使用内置, 全局的名字
        内置命名空间: 只能使用内置的名字

    # 全局作用域 —— 作用在全局 —— 内置和全局名字空间中的名字都属于全局作用域  ——globals()
    # 局部作用域 —— 作用在局部 —— 函数（局部名字空间中的名字属于局部作用域） ——locals()
"""

# 如果想要在局部作用域修改全局作用域变量的话, 需要在局部作用域中加global声明

a = 1


# func1无法修改全局变量a的值
def func1():
    a = 2
    print(a)


# 在局部变量中, 加入global修饰, 就可以修改全局变量的值
def func2():
    global a
    a = 100
    print(a)


# func1()
# func2()
# print(a)


def func3():
    f3 = 1
    list1 = [22, 33, 55]
    print(locals())


def func4():
    print(globals())


func3()  # {'f3': 1, 'list1': [22, 33, 55]}
func4()
print(locals())
